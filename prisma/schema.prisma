datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "cargo prisma"
  output   = "../src/prisma.rs"
}

enum RoleType {
  client
  admin
}

model User {
  id          String    @id @default(uuid())
  displayName String
  firstName   String
  lastName    String
  email       String    @unique
  password    String
  role        RoleType
  comments    Comment[]
  orders      Order[]
  reviews     Review[]
  key         String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Category {
  id               String             @id @default(uuid())
  name             String
  description      String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  products         Product[]          @relation("CategoryProducts")
  CategoryProducts CategoryProducts[]
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}

model Product {
  id               String             @id @default(uuid())
  name             String
  description      String
  price            Float
  stock            Int
  imageUrl         String
  categories       Category[]         @relation("CategoryProducts")
  reviews          Review[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  orderItems       OrderItem[]
  CategoryProducts CategoryProducts[]
}

model Order {
  id        String      @id @default(uuid())
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  items     OrderItem[]
  status    String
  total     Float
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model OrderItem {
  id        String   @id @default(uuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id        String   @id @default(uuid())
  rating    Int
  comment   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CategoryProducts {
  categoryId String
  productId  String
  category   Category @relation(fields: [categoryId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])

  @@id([categoryId, productId])
}
